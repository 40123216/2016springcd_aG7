{"pages":[{"text":"啟動 cdw18 協同專案 2D鍊條組合: http://40123255w17-40123255w11.rhcloud.com/ 2D齒輪嚙合: http://40123255w16-40123255w11.rhcloud.com 期末考週: onshape3D齒輪組合: https://cad.onshape.com/documents/444a9b1356cb0c7c2206eb28/w/3ca51f32d1ad2dc5c70b6096/e/83d0c1f0acfaa20ff1332d20 第十六週心得 : 使用原先的齒輪原始碼，修改程式參數後，試著調整三個齒輪間的距離，模數一樣但比例大小不一樣，互相調整後即可嚙合。 第二步 把成果推上openshift網頁 推了兩次都失敗，組員們說似乎是金鑰出問題，在推第三次時，特地把多餘的python3.3都清除 一步一步地照著組員們的順序 來建立資料夾>git clone到最後的git push終於沒出現金鑰錯誤或是找不到有檔案修改的問題。 第十七週心得 : 這週是一組要利用onshape來合作繪出3D組合齒輪 首先必須先由一個組員創建一個onshape繪圖空間 點擊share後依序把組員加入共享 然後由各組員繪出指定的各齒數的齒輪 接著把各組員的齒輪結合 劃出一平面 將齒輪依序用限制條件固定在平面上並可轉動在調整到適當距離後完成","title":"40123255 期末報告","url":"./40123255-qi-mo-bao-gao.html","tags":"ag7"},{"text":"啟動 cdw18 協同專案 個人Github倉儲 : https://github.com/40123227/cdw2 2D鏈輪 : http://python3-cadp13bg8.rhcloud.com/ag7_40123227/ag7_40123227_2 2D齒輪嚙合 : http://python3-cadp13bg8.rhcloud.com/ag7_40123227/ag7_40123227_ 3D齒輪 : https://cad.onshape.com/documents/27fec51d027c23793c146f50/w/7e0656ca8cc33f9e03ad99cd/e/2afc15dc30dada0fd05c26ea 第十六週心得 : (一) 本來一開始openshift 使用單一網址連結，但如果要使用新的連結就要再創一個python3.3，覺得很麻煩，且openshift最多讓免費使者只能創造三個，所以利用.py檔來讓網址連結，使用一個就可以讓其他.py檔一起使用。 (二) 2D齒輪嚙合和模數、軸心距的關係非常重要，使用SciTE修改程式參數，讓三個齒輪互相嚙合，注意模數要保持一樣，否則將無法嚙合，本次先以2D圖展示，下週開始繼續用 Onshape 畫出 3D齒輪嚙合。 第十七週心得 : 本週進度太慢，導致3D齒輪尚未完成，期許下週繪製完成，目前對於onshape還不太熟悉，透過今天試繪，讓整體架構出現，下週開始在讓其能互相嚙合作動，本週也已經將之前所繪製的鏈輪使用openshift連結產生成果。","title":"40123227 期末報告","url":"./40123227-qi-mo-bao-gao.html","tags":"ag7"},{"text":"啟動 cdw18 協同專案 個人Github倉儲 : https://github.com/40123216/cdw11 個人Openshift網址 : http://python3-40123216.rhcloud.com/ 2D鍊條組合: http://python3-40123216.rhcloud.com/ag7_40123216/ag7_40123216_1 2D齒輪組合 : http://python3-40123216.rhcloud.com/ag7_40123216/ag7_40123216_2 3D-Onshape齒輪嚙合 : https://cad.onshape.com/documents/b6034d595ad24a2b5f1d1959/w/2620cd63baa1ebad753dbcad/e/f681639e390f0a5e1d35645b 第十四週心得 : 以三個齒輪先練持如何調整參數，完成齒輪嚙合，並以遠端方式呈現之，程式是直接copy的，但先清楚知道如何去更改兩齒輪之間嚙合的參數；自行練習新建一個新的齒輪(包含原本共四個)，更改其齒輪的參數並調整齒數(齒數為:4N，N=17)，並條整齒輪中心距完成嚙合，最後以近端方式呈現之。 第十六週心得 : 運用修改程式參數，將齒輪搭配完成聶合，需透過齒輪 (1)節圓公式，計算兩齒輪中心距，公式 : 齒輪中心距=(D+d)/2，D、d為大齒輪及小齒輪節圓直徑 (2)模數公式，M=D/t，D為節圓直徑，t為齒數 利用Onshape線上繪製出兩3D齒輪，模數調整為一樣，才可作配合，模數不同無法嚙合，其中需再加裝一固定板(零件 : part)，系將兩齒輪中心軸固定在上，調整結合方式，以及使用Gear relation功能，即可使兩齒輪旋轉動作，轉速比調整後若是嚙合不佳，可再調整壓力角大小，過程中確實學習到如何使用線上繪圖軟體、如何配合齒輪聶合，最新軟體Onshape會是未來創新設計的利器。 參考資料 : Onshape 線上教學影片 第十七週心得 : 學習如何使用git pull近端倉儲與班上共同倉儲進行同步，在clone cdw11週網址，並新建立.py檔(如 : ag7_40123216_1.py)，將所呈現網頁的原始程式覆蓋儲存，再進行git add -A、git commit -m \"40123216\"，等操作步驟，完成push步驟，其好處是可以運用一個openshift網址，更改其網址之參數，即可呈現不同之作業成果，以往都是單一openshift呈現單一作業成果，一對一的呈現方式非常不便，而且很佔空間，學會如何遠近端同步進行，可以單一網址更改其網址參數，呈現多樣成果是最有效率的 第十八週心得 : 利用Onshape線上繪製出3D齒輪，其中每位組員都要將齒輪之模數調整為一樣，才可作配合，並且在onshape頁面使用share功能鍵，並分享給自己的組員，並由我擔任這次的組合作業，需搭配一固定板(零件 : part)，其中續計算兩齒輪嚙合之中心距，將齒輪中心軸固定在上，使用Gear relation功能，讓兩齒輪旋轉動作，齒輪轉的動轉速比為，V=n1/n2=n2/n3=n3/n4...(n1=17、n2=19、n3=21...)類推，轉速比調整後若是嚙合不佳，可再調整壓力角大小，這樣的繪圖協同操作過程很方便，這樣以後若是有需要使用到共享零件，可以透過分享載入組合配置，完成後一樣可以再分享給其他需要的人，可以省去掉很多繪製零件的時間。 期末心得 : 本學期學習到新的push方式，只要點\"push鍵\"必且進行github的帳號驗證即可達成，當然也把指令重新再次學習，clone我需要的資料、push我修改過的作業，一個一個步驟慢慢有頭緒，很怕做錯，因為可能會因此覆蓋到其他人的，此外確實學習到如何使用金鑰、openshift，創建一個網址，可以呈現上課老師交代的作業內容，必且在leo檔頁面進行遠端網頁的編輯，以及push到遠端，最後是個人最喜歡的網路繪圖程式，確實了解程式參數的設計，去配合出2D的齒輪、鍊條，並且可以將其位移、改變其組立方向等，有效使用網路同步協同，可以節省許多時間，讓工作團隊分工合作、提升工作的效率。","title":"40123216 期末報告","url":"./40123216-qi-mo-bao-gao.html","tags":"ag7"},{"text":"啟動 cdw18 協同專案 個人 github 倉儲 : https://github.com/40123149/cdw11 個人 openshift 鏈結 : http://python2-40123149.rhcloud.com 個人網誌鏈結 : http://2016springag7-cadp13bg8.rhcloud.com/static/blog/40123149-cdw18bao-gao.html 2D齒輪組合鏈結壹 : http://python2-40123149.rhcloud.com/ag7_40123149/ag7_40123149_1 2D齒輪組合鏈結貳 : http://python2-40123149.rhcloud.com/ag7_40123149/ag7_40123149_3 2D鍊條組合鏈結 : http://python2-40123149.rhcloud.com/ag7_40123149/ag7_40123149_2 第十六週心得 : 這次進行2D鍊條組合、2D齒輪組合、3D齒輪組合的設計，相較期中前的設計任務，更加困難，不只是齒輪的中心點、模數與齒數的配置，而鍊條設計時也牽扯到相切圓位置的求法，是如何求出相切點的，目前也在摸索3D建模的部分。而在學習的當中列出幾個重點。 一、 同樣的問題，當在近端設計完成後，沒有檢查便推至遠端，造成衝突，會耗費大量的檢查時間。所以，應該於近端執行檢查，乃至沒有衝突時再與遠端同步，這樣才能降低整個倉儲系統資料癱瘓的機率。也可以先在openshift執行沒有問題後再把資料推送至遠端。 二、 設計2D齒輪組合與2D鍊條組合時需要了解一定的數學公式，唯有了解數學公式的推導，比如相切點的求法、齒輪的旋轉角度等等，才能知道各參數，比如spur(cx-118, cy, m, n, pa) spur(cx, cy, m, 11, pa) spur(cx+80, cy, m, 13, pa)，是如何影響整個設計方案。 三、 雲端onshape如何帶動整個協同設計的方法，當每個人都可以直接利用雲端onshape設計時，相比soildwork的版本差異造成的統整困難，無意識有效地節省大量的人力與時間，對於整個設計有莫大的幫助。 經由以上幾點瞭解到，協同產品設計應該要有系統、有效率且正確地進行，降低寶貴的時間，當產品在設計時，如果產品比其他人更快發表，那麼便會擁有更多的機會，也會更快獲得消費者的回饋，進而在市場上得到很大的優勢。 第十七週心得 : 操作流程簡略介紹 01.輸入git pull使個人近端倉儲與班上的倉儲同步。 02.輸入cd tmp進入tmp的資料夾(Y:\\tmp )。 03.輸入cd cdw11進入tmp的資料夾(Y:\\tmp\\cdw11)，準備完成。 04.複製檔案(tmp\\cdw11\\users\\a\\g100\\cdw12 or cdw13)到各組下的資料夾(tmp\\cdw2\\users\\a\\g7)，然後利用SciTE開啟進行修改。 05.修改檔名與涵式名稱，命名成ag7_a12345678_1 or 2 or …… 06.修改2D齒輪參數進行調整，並了解其配合與作動方式，如修改n值會影響三個齒輪間的中心距離。此外，進行鍊條組合前，先了解鍊條之相切圓關係後，便可利用小鍊結進行組合。 07.完成修改個人python檔後，同樣利用SciTE開啟myflaskapp.py檔(tmp\\cdw11)。 08.完成修改個人的python檔後，同樣利用SciTE開啟myflaskapp.py檔(tmp\\cdw11)。 09.增加 import users.a.g7.ag7_a12345678_1，此為導入ag7_a12345678_1檔案。 10.增加 app.register_blueprint(users.s2a.g7. ag7_a12345678_1. ag7_a12345678_1)此為註冊ag7_a12345678_1檔案。 app.register_blueprint(users.a.g7. ag7_a12345678_1. ag7_a12345678_1) 此為註冊ag7_a12345678_1檔案，完成修改。 11.輸入git add -A，將新增、修改、刪除所有的檔案。 12.輸入git status，檢查。 13.輸入git commit -m \"message\"，快速提交，而\"message\"內為敘述。 14.輸入git push https: // github.com/12345678/.....，把資料推到遠端的個人倉儲。 15.確認有無衝突，輸入帳號與密碼後，成功推至遠端。 16.在已經有openshift的各組網站前提下，把資料複製到python2的資料夾下(\\tmp\\python2)。 17.輸入cd python2進入python2的資料夾(Y:\\tmp\\python2)。 18.輸入git add -A，將新增、修改、刪除所有的檔案。 19.輸入git status，檢查。 20.輸入git commit -m \"message\"，快速提交，而\"message\"內為敘述。 21.輸入git push ssh/……………………，把資料推到遠端的openshift個人網站，成功完成。 第十八週心得 : 這次期末測驗在幾何圖形與齒輪組立不會過於困難，真正困難的地方是所有組員協同的小組倉儲整合，如果不小心造成衝突會使整個小組倉儲崩潰，這點在班上倉儲不時的崩潰已經有相當的認知。 對於建立小組網誌上的困難，在建立起小組網誌時，在近端觀看正常，但推送至遠端時會發生白底藍字的情形，所以進行討論解決。 最後，感謝家銘教授這學期的指導，雖然教授所教的東西，我不能夠完完全全的學會，但在想辦法求出解決辦法的過程，相比兩、三年前有些長進，而其中我認為教授所教的東西中，最重要的不是如何寫程式、不是如何拷貝，而是面對問題必須設法解決它，尤其在協同的過程中，大大小小的問題不斷發生，永遠有新的問題會產生，而這也是教授一直努力想告訴我們的，一個機械設計工程師該持有的心態，出了社會該用甚麼態度來處理將來專業上會遇到的問題。","title":"40123149 期末報告","url":"./40123149-qi-mo-bao-gao.html","tags":"ag7"},{"text":"啟動 cdw18 協同專案 2D鏈條組合 : http://cdw16-40123141.rhcloud.com/ http://cdw16-40123141.rhcloud.com/ 2D齒輪組合 : http://python2-40123141.rhcloud.com/ 3D齒輪嚙合 : https://cad.onshape.com/documents/574b9ad1e4b03afcd8d33eb3/w/9d3f91ed8d3355f80c90b0aa/e/aa68119b8eb17dfcdd8a48e5 個人github 倉儲 : https://github.com/40123141/cdw11 第十六週心得 : 開啟最初的齒輪頁面，打開頁面原始碼再進入SciTE修改程式碼，呈現出三個齒輪，並試著修改大小與距離，控制三個齒輪嚙合。我覺得修改程式碼與其他比起來，我反花最多的是openshift，由於金鑰遺失又要重新打一次，但是步驟錯誤，導致一直無法clone下來，只好一直重新回顧影片，最後還是組員幫忙找錯誤才發現順序的小錯誤。而3D繪圖則是使用onshape，修改程式參數，但要注意嚙合兩齒的模數要相同才能嚙合 第十七週心得 : 如同上一周，2D齒輪鍊條都完成後，最後測試3D齒輪轉動時是否正常，本次openshift有了上次的經驗後，並沒有之前的問題，執行的相當順利，而onshape則需要多花點時間，因為各指令不是很熟練，所以有些東西要找很久。 照著同組組員40123149的心得步驟教學，修改myflaskapp.py中的檔案，增加import users.a.g7.ag7_40123141_1與app.register_blueprint(users.a.g7.ag7_40123141_1.ag7_40123141_1)後存檔 第十八週心得 : 本週為期末考週，按照要求須呈現各 2D 3D繪圖與個人網誌分組網誌，由於不懂題意導致呈現成果時，出了許多麻煩，因此組員們又開始趕緊修補，呈現出正確的3D齒輪組合，由原本的單純COPY改為正確的個人齒輪再統合起來做組合圖，做完整的嚙和。 將三週所做的成果，同步呈現在個人網誌與公開網誌上，且參考林祐生之樣式與方法，做最後的修改與統整。","title":"40123141 期末報告","url":"./40123141-qi-mo-bao-gao.html","tags":"ag7"},{"text":"啟動 cdw18 協同專案 2D鍊條組合 : http://40123119w18-cadp13ag7.rhcloud.com/ 2D齒輪嚙合 : http://40123119w18-cadp13ag7.rhcloud.com/ 第十六週心得 : 一開始的網頁原始碼，是在畫布上呈現一個齒輪，但是要如何做到三個齒輪嚙合呢?首先先將一開始的齒輪參數蓋掉，隨後在空白處補上cgo.render(gear)# render 繪出靜態正齒輪輪廓，deg = math.pi/180，Line = cobj(['M', cx, cy, 'L', cx+prmath.cos(180/ndeg), cy+prmath.sin(180/ndeg)], \"PARH\", {'strokeColor':'blue' ,'linWidth':4})，cgo.render(Line)# 接著繪製齒輪的基準線，接著將畫布的寬高比除與2以及齒輪的比例縮小五倍，否則三個齒輪會超出畫布的大小，接著分別打上spur(cx-118, cy, m, n, pa)，spur(cx, cy, m, 11, pa)，spur(cx+80, cy, m, 13, pa)，依序為x,y中心位置的距離、模數、齒數、壓力角，嚙合時齒輪間模數與壓力角相同方能嚙合，接著改上要求的齒數，以及嚙合需要調整齒輪中心距離位置以及齒輪轉角，為了能讓齒輪更精準的嚙合。 第十七週心得 : 因為還不太熟悉onshape的操作功能，所以剛開始是先看老師的步驟以及老師在kmolab上給的網址在一個步驟一步驟看如何建立基底，軸心，齒輪在來做嚙合。不過這周先上傳之前所做的2D鍊條，本鍊條我有增加鏈條數目，這學期以來上傳成果要呈現給老師看的方式都是以openshfit建python3.3，在建金鑰，在利用command逐步的打指令先是在git push wsgi.py的檔案，不過我們這組有發現，每要發一個成果，就必須再創一個openshfit，實在麻煩，而且下的URL還不能一樣，會使成果呈現顯得很亂沒有連貫性，所以我們開始向40123149同學的做法去做討論和學習，期許在本次的重修上學到的不只是老師上課所要教給我們的腳踏車一些機構的組立，還學習到更多可以在網路呈現的工具，相信在往後這些一定都是不可獲缺的技能。","title":"40123119 期末報告","url":"./40123119-qi-mo-bao-gao.html","tags":"ag7"}]}