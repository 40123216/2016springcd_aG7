# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'eric\Preferences\ConfigurationPages\ApplicationPage.ui'
#
# Created by: PyQt5 UI code generator 5.5.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_ApplicationPage(object):
    def setupUi(self, ApplicationPage):
        ApplicationPage.setObjectName("ApplicationPage")
        ApplicationPage.resize(589, 563)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(ApplicationPage)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.headerLabel = QtWidgets.QLabel(ApplicationPage)
        self.headerLabel.setObjectName("headerLabel")
        self.verticalLayout_3.addWidget(self.headerLabel)
        self.line9_3 = QtWidgets.QFrame(ApplicationPage)
        self.line9_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line9_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line9_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line9_3.setObjectName("line9_3")
        self.verticalLayout_3.addWidget(self.line9_3)
        self.singleApplicationCheckBox = QtWidgets.QCheckBox(ApplicationPage)
        self.singleApplicationCheckBox.setObjectName("singleApplicationCheckBox")
        self.verticalLayout_3.addWidget(self.singleApplicationCheckBox)
        self.splashScreenCheckBox = QtWidgets.QCheckBox(ApplicationPage)
        self.splashScreenCheckBox.setObjectName("splashScreenCheckBox")
        self.verticalLayout_3.addWidget(self.splashScreenCheckBox)
        self.groupBox_3 = QtWidgets.QGroupBox(ApplicationPage)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridlayout = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridlayout.setObjectName("gridlayout")
        self.noOpenRadioButton = QtWidgets.QRadioButton(self.groupBox_3)
        self.noOpenRadioButton.setObjectName("noOpenRadioButton")
        self.gridlayout.addWidget(self.noOpenRadioButton, 0, 0, 1, 1)
        self.lastFileRadioButton = QtWidgets.QRadioButton(self.groupBox_3)
        self.lastFileRadioButton.setObjectName("lastFileRadioButton")
        self.gridlayout.addWidget(self.lastFileRadioButton, 0, 1, 1, 1)
        self.lastProjectRadioButton = QtWidgets.QRadioButton(self.groupBox_3)
        self.lastProjectRadioButton.setObjectName("lastProjectRadioButton")
        self.gridlayout.addWidget(self.lastProjectRadioButton, 1, 0, 1, 1)
        self.lastMultiprojectRadioButton = QtWidgets.QRadioButton(self.groupBox_3)
        self.lastMultiprojectRadioButton.setObjectName("lastMultiprojectRadioButton")
        self.gridlayout.addWidget(self.lastMultiprojectRadioButton, 1, 1, 1, 1)
        self.globalSessionRadioButton = QtWidgets.QRadioButton(self.groupBox_3)
        self.globalSessionRadioButton.setObjectName("globalSessionRadioButton")
        self.gridlayout.addWidget(self.globalSessionRadioButton, 2, 0, 1, 1)
        self.verticalLayout_3.addWidget(self.groupBox_3)
        self.groupBox_2 = QtWidgets.QGroupBox(ApplicationPage)
        self.groupBox_2.setObjectName("groupBox_2")
        self.hboxlayout = QtWidgets.QHBoxLayout(self.groupBox_2)
        self.hboxlayout.setObjectName("hboxlayout")
        self.noCheckRadioButton = QtWidgets.QRadioButton(self.groupBox_2)
        self.noCheckRadioButton.setObjectName("noCheckRadioButton")
        self.hboxlayout.addWidget(self.noCheckRadioButton)
        self.alwaysCheckRadioButton = QtWidgets.QRadioButton(self.groupBox_2)
        self.alwaysCheckRadioButton.setObjectName("alwaysCheckRadioButton")
        self.hboxlayout.addWidget(self.alwaysCheckRadioButton)
        self.dailyCheckRadioButton = QtWidgets.QRadioButton(self.groupBox_2)
        self.dailyCheckRadioButton.setObjectName("dailyCheckRadioButton")
        self.hboxlayout.addWidget(self.dailyCheckRadioButton)
        self.weeklyCheckRadioButton = QtWidgets.QRadioButton(self.groupBox_2)
        self.weeklyCheckRadioButton.setObjectName("weeklyCheckRadioButton")
        self.hboxlayout.addWidget(self.weeklyCheckRadioButton)
        self.monthlyCheckRadioButton = QtWidgets.QRadioButton(self.groupBox_2)
        self.monthlyCheckRadioButton.setObjectName("monthlyCheckRadioButton")
        self.hboxlayout.addWidget(self.monthlyCheckRadioButton)
        self.verticalLayout_3.addWidget(self.groupBox_2)
        self.groupBox_4 = QtWidgets.QGroupBox(ApplicationPage)
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox_4)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.systemEmailClientCheckBox = QtWidgets.QCheckBox(self.groupBox_4)
        self.systemEmailClientCheckBox.setObjectName("systemEmailClientCheckBox")
        self.verticalLayout_2.addWidget(self.systemEmailClientCheckBox)
        self.verticalLayout_3.addWidget(self.groupBox_4)
        self.groupBox = QtWidgets.QGroupBox(ApplicationPage)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.errorlogCheckBox = QtWidgets.QCheckBox(self.groupBox)
        self.errorlogCheckBox.setObjectName("errorlogCheckBox")
        self.verticalLayout.addWidget(self.errorlogCheckBox)
        self.verticalLayout_3.addWidget(self.groupBox)
        spacerItem = QtWidgets.QSpacerItem(571, 21, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem)

        self.retranslateUi(ApplicationPage)
        QtCore.QMetaObject.connectSlotsByName(ApplicationPage)
        ApplicationPage.setTabOrder(self.singleApplicationCheckBox, self.splashScreenCheckBox)
        ApplicationPage.setTabOrder(self.splashScreenCheckBox, self.noOpenRadioButton)
        ApplicationPage.setTabOrder(self.noOpenRadioButton, self.lastFileRadioButton)
        ApplicationPage.setTabOrder(self.lastFileRadioButton, self.lastProjectRadioButton)
        ApplicationPage.setTabOrder(self.lastProjectRadioButton, self.lastMultiprojectRadioButton)
        ApplicationPage.setTabOrder(self.lastMultiprojectRadioButton, self.globalSessionRadioButton)
        ApplicationPage.setTabOrder(self.globalSessionRadioButton, self.noCheckRadioButton)
        ApplicationPage.setTabOrder(self.noCheckRadioButton, self.alwaysCheckRadioButton)
        ApplicationPage.setTabOrder(self.alwaysCheckRadioButton, self.dailyCheckRadioButton)
        ApplicationPage.setTabOrder(self.dailyCheckRadioButton, self.weeklyCheckRadioButton)
        ApplicationPage.setTabOrder(self.weeklyCheckRadioButton, self.monthlyCheckRadioButton)
        ApplicationPage.setTabOrder(self.monthlyCheckRadioButton, self.systemEmailClientCheckBox)
        ApplicationPage.setTabOrder(self.systemEmailClientCheckBox, self.errorlogCheckBox)

    def retranslateUi(self, ApplicationPage):
        _translate = QtCore.QCoreApplication.translate
        self.headerLabel.setText(_translate("ApplicationPage", "<b>Configure the application</b>"))
        self.singleApplicationCheckBox.setToolTip(_translate("ApplicationPage", "Select, if only one instance of the application should be running"))
        self.singleApplicationCheckBox.setText(_translate("ApplicationPage", "Single Application Mode"))
        self.splashScreenCheckBox.setToolTip(_translate("ApplicationPage", "Select to show the startup splash screen"))
        self.splashScreenCheckBox.setText(_translate("ApplicationPage", "Show Splash Screen at startup"))
        self.groupBox_3.setTitle(_translate("ApplicationPage", "Open at startup"))
        self.noOpenRadioButton.setToolTip(_translate("ApplicationPage", "Select to not open anything"))
        self.noOpenRadioButton.setText(_translate("ApplicationPage", "None"))
        self.lastFileRadioButton.setToolTip(_translate("ApplicationPage", "Select to open the most recently opened file"))
        self.lastFileRadioButton.setText(_translate("ApplicationPage", "Last File"))
        self.lastProjectRadioButton.setToolTip(_translate("ApplicationPage", "Select to open the most recently opened project"))
        self.lastProjectRadioButton.setText(_translate("ApplicationPage", "Last Project"))
        self.lastMultiprojectRadioButton.setToolTip(_translate("ApplicationPage", "Select to open the most recently opened multiproject"))
        self.lastMultiprojectRadioButton.setText(_translate("ApplicationPage", "Last Multiproject"))
        self.globalSessionRadioButton.setToolTip(_translate("ApplicationPage", "Select to restore the global session"))
        self.globalSessionRadioButton.setText(_translate("ApplicationPage", "Global Session"))
        self.groupBox_2.setTitle(_translate("ApplicationPage", "Check for updates"))
        self.noCheckRadioButton.setToolTip(_translate("ApplicationPage", "Select to disable update checking"))
        self.noCheckRadioButton.setText(_translate("ApplicationPage", "None"))
        self.alwaysCheckRadioButton.setToolTip(_translate("ApplicationPage", "Select to check for updates at every startup"))
        self.alwaysCheckRadioButton.setText(_translate("ApplicationPage", "Always"))
        self.dailyCheckRadioButton.setToolTip(_translate("ApplicationPage", "Select to check for updates once a day"))
        self.dailyCheckRadioButton.setText(_translate("ApplicationPage", "Daily"))
        self.weeklyCheckRadioButton.setToolTip(_translate("ApplicationPage", "Select to check for updates once a week"))
        self.weeklyCheckRadioButton.setText(_translate("ApplicationPage", "Weekly"))
        self.monthlyCheckRadioButton.setToolTip(_translate("ApplicationPage", "Select to check for updates once a month"))
        self.monthlyCheckRadioButton.setText(_translate("ApplicationPage", "Monthly"))
        self.groupBox_4.setTitle(_translate("ApplicationPage", "Reporting"))
        self.systemEmailClientCheckBox.setToolTip(_translate("ApplicationPage", "Select to use the system email client to send reports"))
        self.systemEmailClientCheckBox.setText(_translate("ApplicationPage", "Use System Email Client"))
        self.groupBox.setTitle(_translate("ApplicationPage", "Error Log"))
        self.errorlogCheckBox.setToolTip(_translate("ApplicationPage", "Select to check the existence of an error log upon startup"))
        self.errorlogCheckBox.setText(_translate("ApplicationPage", "Check for Error Log at Startup"))

